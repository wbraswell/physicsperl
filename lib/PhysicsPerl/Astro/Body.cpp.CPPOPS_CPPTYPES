// [[[ HEADER ]]]
using std::cout;  using std::cerr;

#ifndef __CPP__INCLUDED__PhysicsPerl__Astro__Body_cpp
#define __CPP__INCLUDED__PhysicsPerl__Astro__Body_cpp 0.001_000

// [[[ INCLUDES ]]]
#include <PhysicsPerl/Astro/Body.h>

# ifdef __PERL__TYPES

Purposefully_die_from_a_compile-time_error,_due_to____PERL__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# elif defined __CPP__TYPES

// [[[<<< BEGIN CPP TYPES >>>]]]
// [[[<<< BEGIN CPP TYPES >>>]]]
// [[[<<< BEGIN CPP TYPES >>>]]]

// [[[ OO METHODS & SUBROUTINES ]]]

// NEED ADD std::enabled_shared_from_this()
PhysicsPerl::Astro::Body PhysicsPerl__Astro__Body::offset_momentum(number px, number py, number pz) {
    this->vx = -1 * (px / SOLAR_MASS);
    this->vy = -1 * (py / SOLAR_MASS);
    this->vz = -1 * (pz / SOLAR_MASS);
    return this;
}

PhysicsPerl::Astro::Body_arrayref PhysicsPerl__Astro__Body::test() {
    return {this, this};
}

uniq_ptr<PhysicsPerl::Astro::Body> jupiter() {
    // NEED UPDATE: use std::make_unique() here and below to fulfill "no naked news", added to C++14 feature set in GCC 4.9, wait for mainstream adoption
    unique_ptr<PhysicsPerl::Astro::Body> p(new Foo);
    p->[x] = +4.841_431_442_464_720_90e+00;
    p->[y] = -1.160_320_044_027_428_39e+00;
    p->[z] = -1.036_220_444_711_231_09e-01;
    p->[vx] = +1.660_076_642_744_036_94e-03 * DAYS_PER_YEAR;
    p->[vy] = +7.699_011_184_197_404_25e-03 * DAYS_PER_YEAR;
    p->[vz] = -6.904_600_169_720_630_23e-05 * DAYS_PER_YEAR;
    p->[mass] = +9.547_919_384_243_266_09e-04 * SOLAR_MASS;
    return p;
}

uniq_ptr<PhysicsPerl::Astro::Body> saturn() {
    unique_ptr<PhysicsPerl::Astro::Body> p(new Foo);
    p->[x] = +8.343_366_718_244_579_87e+00;
    p->[y] = +4.124_798_564_124_304_79e+00;
    p->[z] = -4.035_234_171_143_213_81e-01;
    p->[vx] = -2.767_425_107_268_624_11e-03 * DAYS_PER_YEAR;
    p->[vy] = +4.998_528_012_349_172_38e-03 * DAYS_PER_YEAR;
    p->[vz] = +2.304_172_975_737_639_29e-05 * DAYS_PER_YEAR;
    p->[mass] = +2.858_859_806_661_308_12e-04 * SOLAR_MASS;
    return p;
}

uniq_ptr<PhysicsPerl::Astro::Body> uranus() {
    unique_ptr<PhysicsPerl::Astro::Body> p(new Foo);
    p->[x] = +1.289_436_956_213_913_10e+01;
    p->[y] = -1.511_115_140_169_863_12e+01;
    p->[z] = -2.233_075_788_926_557_34e-01;
    p->[vx] = +2.964_601_375_647_616_18e-03 * DAYS_PER_YEAR;
    p->[vy] = +2.378_471_739_594_809_50e-03 * DAYS_PER_YEAR;
    p->[vz] = -2.965_895_685_402_375_56e-05 * DAYS_PER_YEAR;
    p->[mass] = +4.366_244_043_351_562_98e-05 * SOLAR_MASS;
    return p;
}

uniq_ptr<PhysicsPerl::Astro::Body> neptune() {
    unique_ptr<PhysicsPerl::Astro::Body> p(new Foo);
    p->[x] = +1.537_969_711_485_091_65e+01;
    p->[y] = -2.591_931_460_998_796_41e+01;
    p->[z] = +1.792_587_729_503_711_81e-01;
    p->[vx] = +2.680_677_724_903_893_22e-03 * DAYS_PER_YEAR;
    p->[vy] = +1.628_241_700_382_422_95e-03 * DAYS_PER_YEAR;
    p->[vz] = -9.515_922_545_197_158_70e-05 * DAYS_PER_YEAR;
    p->[mass] = +5.151_389_020_466_114_51e-05 * SOLAR_MASS;
    return p;
}

uniq_ptr<PhysicsPerl::Astro::Body> sun() {
    unique_ptr<PhysicsPerl::Astro::Body> p(new Foo);
    p->[x] = 0;
    p->[y] = 0;
    p->[z] = 0;
    p->[vx] = 0;
    p->[vy] = 0;
    p->[vz] = 0;
    p->[mass] = SOLAR_MASS;
    return p;
}

// [[[<<< END CPP TYPES >>>]]]
// [[[<<< END CPP TYPES >>>]]]
// [[[<<< END CPP TYPES >>>]]]

# else

Purposefully_die_from_a_compile-time_error,_due_to_neither___PERL__TYPES_nor___CPP__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# endif

#endif
