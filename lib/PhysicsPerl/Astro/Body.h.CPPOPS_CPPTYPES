using std::cout;  using std::cerr;

#ifndef __CPP__INCLUDED__PhysicsPerl__Astro__Body_h
#define __CPP__INCLUDED__PhysicsPerl__Astro__Body_h 0.004_000

#include <RPerl.cpp>  // -> RPerl.h -> (rperltypes_mode.h; rperltypes.h; HelperFunctions.cpp)
#include <RPerl/CompileUnit/Module/Class.cpp>

# ifdef __PERL__TYPES

Purposefully_die_from_a_compile-time_error,_due_to____PERL__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# elif defined __CPP__TYPES

const number PI = 3.141592653589793;
const number SOLAR_MASS = 39.4784176043574;
const number DAYS_PER_YEAR = 365.24;

class PhysicsPerl__Astro__Body : public RPerl__CompileUnit__Module__Class {
public:
    PhysicsPerl__Astro__Body();
    ~PhysicsPerl__Astro__Body();
    number x;
    number y;
    number z;
    number vx;
    number vy;
    number vz;
    number mass;
};

std::unique_ptr<PhysicsPerl__Astro__Body> sun();
std::unique_ptr<PhysicsPerl__Astro__Body> jupiter();
std::unique_ptr<PhysicsPerl__Astro__Body> saturn();
std::unique_ptr<PhysicsPerl__Astro__Body> uranus();
std::unique_ptr<PhysicsPerl__Astro__Body> neptune();

integer PhysicsPerl__Astro__Body__MODE_ID() { return 2; }  // CPPOPS_CPPTYPES is 2

# else

Purposefully_die_from_a_compile-time_error,_due_to_neither___PERL__TYPES_nor___CPP__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# endif

#endif
