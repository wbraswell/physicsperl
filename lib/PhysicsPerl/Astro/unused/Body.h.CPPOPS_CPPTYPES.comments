// NOTE! THIS FILE IS OUT OF DATE, KEPT FOR REFERENCE ONLY
// NOTE! THIS FILE IS OUT OF DATE, KEPT FOR REFERENCE ONLY
// NOTE! THIS FILE IS OUT OF DATE, KEPT FOR REFERENCE ONLY


using std::cout;  using std::cerr;

#ifndef __CPP__INCLUDED__PhysicsPerl__Astro__Body_h
#define __CPP__INCLUDED__PhysicsPerl__Astro__Body_h 0.005_000

#include <RPerl.cpp>  // -> RPerl.h -> (rperltypes_mode.h; rperltypes.h; HelperFunctions.cpp)
#include <RPerl/CompileUnit/Module/Class.cpp>

# ifdef __PERL__TYPES

Purposefully_die_from_a_compile-time_error,_due_to____PERL__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# elif defined __CPP__TYPES

// [[[<<< BEGIN CPP TYPES >>>]]]
// [[[<<< BEGIN CPP TYPES >>>]]]
// [[[<<< BEGIN CPP TYPES >>>]]]

// [[[ CONSTANTS ]]]
//const number PhysicsPerl__Astro__Body__PI = 3.141592653589793;  // CURRENTLY UNUSED
const number PhysicsPerl__Astro__Body__SOLAR_MASS = 39.4784176043574;
//const number PhysicsPerl__Astro__Body__SOLAR_RADIUS = 696300;  // CURRENTLY UNUSED
const number PhysicsPerl__Astro__Body__DAYS_PER_YEAR = 365.24;

class PhysicsPerl__Astro__Body : public RPerl__CompileUnit__Module__Class__CPP {
public:
    PhysicsPerl__Astro__Body() {}
    ~PhysicsPerl__Astro__Body() {}
    string name;
    number x;
    number y;
    number z;
    number vx;
    number vy;
    number vz;
    number mass;
    number radius;
    integer_arrayref color;

    string get_name() { return this->name; }
    number get_x() { return this->x; }
    number get_y() { return this->y; }
    number get_z() { return this->z; }
    number get_vx() { return this->vx; }
    number get_vy() { return this->vy; }
    number get_vz() { return this->vz; }
    number get_mass() { return this->mass; }
    number get_radius() { return this->radius; }
    integer_arrayref get_color() { return this->color; }
};

#define PhysicsPerl__Astro__Body_rawptr PhysicsPerl__Astro__Body*
typedef std::unique_ptr<PhysicsPerl__Astro__Body> PhysicsPerl__Astro__Body_ptr;
typedef std::vector<PhysicsPerl__Astro__Body_ptr> PhysicsPerl__Astro__Body__arrayref;
typedef std::unordered_map<string, PhysicsPerl__Astro__Body_ptr> PhysicsPerl__Astro__Body__hashref;
typedef std::unordered_map<string, PhysicsPerl__Astro__Body_ptr>::iterator PhysicsPerl__Astro__Body__hashref_iterator;

PhysicsPerl__Astro__Body_ptr sun();
PhysicsPerl__Astro__Body_ptr jupiter();
PhysicsPerl__Astro__Body_ptr saturn();
PhysicsPerl__Astro__Body_ptr uranus();
PhysicsPerl__Astro__Body_ptr neptune();

integer PhysicsPerl__Astro__Body__MODE_ID() { return 2; }  // CPPOPS_CPPTYPES is 2

// CORRELATION #pp10: unfinished attempt to manually define pack/unpack for object return type
// [[[ TYPEMAP PACK/UNPACK FOR __CPP__TYPES ]]]
//PhysicsPerl__Astro__Body XS_unpack_PhysicsPerl__Astro__Body(SV* input_hv_ref);
//void XS_pack_PhysicsPerl__Astro__Body(SV* output_hv_ref, PhysicsPerl__Astro__Body input_object);

# else

Purposefully_die_from_a_compile-time_error,_due_to_neither___PERL__TYPES_nor___CPP__TYPES_being_defined.__We_need_to_define_only___CPP__TYPES_in_this_file!

# endif

#endif
